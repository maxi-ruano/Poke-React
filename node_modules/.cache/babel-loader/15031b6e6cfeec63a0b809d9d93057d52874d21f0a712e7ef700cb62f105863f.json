{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sistemas1\\\\Desktop\\\\reactfront\\\\src\\\\components\\\\PokeDetail.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import backgroundImage from \"../assets/img/b.png\"; // Importa la imagen de fondo\n// import { Link } from \"react-router-dom\";\n\n// const PokeDetail = () => {\n//   const { name } = useParams();\n//   const [pokemon, setPokemon] = useState(null);\n\n//   useEffect(() => {\n//     const fetchPokemonDetails = async () => {\n//       try {\n//         const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`);\n//         const data = await response.json();\n//         setPokemon(data);\n//       } catch (error) {\n//         console.error(\"Error al obtener detalles del Pokémon:\", error);\n//       }\n//     };\n\n//     fetchPokemonDetails();\n//   }, [name]);\n\n//   return (\n//     <div\n//       className=\"container mt-4\"\n//       style={{\n//         position: 'relative',\n//         minHeight: \"100vh\",\n//         display: \"flex\",\n//         flexDirection: \"column\",\n//         alignItems: \"center\",\n//         justifyContent: \"center\",\n//       }}\n//     >\n//       {/* Contenedor para la imagen de fondo con opacidad */}\n//       <div\n//         style={{\n//           position: 'absolute',\n//           top: 0,\n//           left: 0,\n//           width: '100%',\n//           height: '100%',\n//           backgroundImage: `url(${backgroundImage})`,\n//           backgroundSize: \"cover\",\n//           backgroundPosition: \"center\",\n//           opacity: 0.5,\n//           zIndex: 0,\n//         }}\n//       />\n\n//       {/* Estilo para el título */}\n//       <h1\n//         className=\"mb-4 text-dark\"\n//         style={{\n//           fontWeight: \"bold\",\n//           zIndex: 1,\n//         }}\n//       >\n//         Details Pokemon\n//       </h1>\n//       <br />\n\n//       {pokemon ? (\n//         <div className=\"card\" style={{ position: \"relative\" }}>\n//           <div\n//             className=\"card-body\"\n//             style={{\n//               transition: \"background-color 0.3s\",\n//               backgroundColor: \"#fff\", // Color de fondo predeterminado\n//             }}\n//             onMouseEnter={() => {\n//               // Cambiar el color de fondo al hacer hover\n//               document.querySelector(\".card-body\").style.backgroundColor = \"#e0e0e0\";\n//             }}\n//             onMouseLeave={() => {\n//               // Restaurar el color de fondo al salir del hover\n//               document.querySelector(\".card-body\").style.backgroundColor = \"#fff\";\n//             }}\n//           >\n//             <h2 className=\"card-title\">{pokemon.name}</h2>\n//             {pokemon.sprites && (\n//               <img\n//                 src={pokemon.sprites.front_default}\n//                 alt={pokemon.name}\n//                 className=\"img-fluid mb-3\"\n//               />\n//             )}\n//             {/* Agrega más detalles según lo necesario */}\n//           </div>\n//         </div>\n//       ) : (\n//         <Link to=\"/\" className=\"btn btn-primary mt-3\">\n//         Ir a la Página Principal\n//       </Link>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default PokeDetail;\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokeDetail = () => {\n  _s();\n  const {\n    name\n  } = useParams();\n  const [pokemon, setPokemon] = useState(null);\n  useEffect(() => {\n    const fetchPokemonDetails = async () => {\n      try {\n        // Realiza una llamada a la API para obtener los detalles del Pokemon\n        const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`);\n        const data = await response.json();\n\n        // Actualiza el estado 'pokemon' con los detalles obtenidos\n        setPokemon(data);\n      } catch (error) {\n        console.error(\"Error al obtener detalles del Pokémon:\", error);\n        // Puedes manejar errores aquí, por ejemplo, mostrar un mensaje de error.\n      }\n    };\n\n    // Llama a la función para obtener los detalles del Pokemon\n    fetchPokemonDetails();\n  }, [name]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: pokemon && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: pokemon.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), pokemon.sprites && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pokemon.sprites.front_default,\n        alt: pokemon.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(PokeDetail, \"GiVVrxyCLtWMLjVdzkupeRh/ZKA=\", false, function () {\n  return [useParams];\n});\n_c = PokeDetail;\nexport default PokeDetail;\nvar _c;\n$RefreshReg$(_c, \"PokeDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","PokeDetail","_s","name","pokemon","setPokemon","fetchPokemonDetails","response","fetch","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","sprites","src","front_default","alt","_c","$RefreshReg$"],"sources":["C:/Users/Sistemas1/Desktop/reactfront/src/components/PokeDetail.jsx"],"sourcesContent":["\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { useParams } from \"react-router-dom\";\r\n// import backgroundImage from \"../assets/img/b.png\"; // Importa la imagen de fondo\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// const PokeDetail = () => {\r\n//   const { name } = useParams();\r\n//   const [pokemon, setPokemon] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchPokemonDetails = async () => {\r\n//       try {\r\n//         const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`);\r\n//         const data = await response.json();\r\n//         setPokemon(data);\r\n//       } catch (error) {\r\n//         console.error(\"Error al obtener detalles del Pokémon:\", error);\r\n//       }\r\n//     };\r\n\r\n//     fetchPokemonDetails();\r\n//   }, [name]);\r\n\r\n//   return (\r\n//     <div\r\n//       className=\"container mt-4\"\r\n//       style={{\r\n//         position: 'relative',\r\n//         minHeight: \"100vh\",\r\n//         display: \"flex\",\r\n//         flexDirection: \"column\",\r\n//         alignItems: \"center\",\r\n//         justifyContent: \"center\",\r\n//       }}\r\n//     >\r\n//       {/* Contenedor para la imagen de fondo con opacidad */}\r\n//       <div\r\n//         style={{\r\n//           position: 'absolute',\r\n//           top: 0,\r\n//           left: 0,\r\n//           width: '100%',\r\n//           height: '100%',\r\n//           backgroundImage: `url(${backgroundImage})`,\r\n//           backgroundSize: \"cover\",\r\n//           backgroundPosition: \"center\",\r\n//           opacity: 0.5,\r\n//           zIndex: 0,\r\n//         }}\r\n//       />\r\n\r\n//       {/* Estilo para el título */}\r\n//       <h1\r\n//         className=\"mb-4 text-dark\"\r\n//         style={{\r\n//           fontWeight: \"bold\",\r\n//           zIndex: 1,\r\n//         }}\r\n//       >\r\n//         Details Pokemon\r\n//       </h1>\r\n//       <br />\r\n\r\n//       {pokemon ? (\r\n//         <div className=\"card\" style={{ position: \"relative\" }}>\r\n//           <div\r\n//             className=\"card-body\"\r\n//             style={{\r\n//               transition: \"background-color 0.3s\",\r\n//               backgroundColor: \"#fff\", // Color de fondo predeterminado\r\n//             }}\r\n//             onMouseEnter={() => {\r\n//               // Cambiar el color de fondo al hacer hover\r\n//               document.querySelector(\".card-body\").style.backgroundColor = \"#e0e0e0\";\r\n//             }}\r\n//             onMouseLeave={() => {\r\n//               // Restaurar el color de fondo al salir del hover\r\n//               document.querySelector(\".card-body\").style.backgroundColor = \"#fff\";\r\n//             }}\r\n//           >\r\n//             <h2 className=\"card-title\">{pokemon.name}</h2>\r\n//             {pokemon.sprites && (\r\n//               <img\r\n//                 src={pokemon.sprites.front_default}\r\n//                 alt={pokemon.name}\r\n//                 className=\"img-fluid mb-3\"\r\n//               />\r\n//             )}\r\n//             {/* Agrega más detalles según lo necesario */}\r\n//           </div>\r\n//         </div>\r\n//       ) : (\r\n//         <Link to=\"/\" className=\"btn btn-primary mt-3\">\r\n//         Ir a la Página Principal\r\n//       </Link>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default PokeDetail;\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst PokeDetail = () => {\r\n  const { name } = useParams();\r\n  const [pokemon, setPokemon] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchPokemonDetails = async () => {\r\n      try {\r\n        // Realiza una llamada a la API para obtener los detalles del Pokemon\r\n        const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`);\r\n        const data = await response.json();\r\n\r\n        // Actualiza el estado 'pokemon' con los detalles obtenidos\r\n        setPokemon(data);\r\n      } catch (error) {\r\n        console.error(\"Error al obtener detalles del Pokémon:\", error);\r\n        // Puedes manejar errores aquí, por ejemplo, mostrar un mensaje de error.\r\n      }\r\n    };\r\n\r\n    // Llama a la función para obtener los detalles del Pokemon\r\n    fetchPokemonDetails();\r\n  }, [name]);\r\n\r\n  return (\r\n    <div>\r\n    {pokemon && (\r\n      <div>\r\n        <h1>{pokemon.name}</h1>\r\n        {pokemon.sprites && (\r\n          <img src={pokemon.sprites.front_default} alt={pokemon.name} />\r\n        )}\r\n        {/* Agrega más detalles según lo necesario */}\r\n      </div>\r\n    )}\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default PokeDetail;\r\n"],"mappings":";;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAK,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC5B,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMU,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qCAAoCL,IAAK,EAAC,CAAC;QACzE,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;QAElC;QACAL,UAAU,CAACI,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;QAC9D;MACF;IACF,CAAC;;IAED;IACAL,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEV,oBACEH,OAAA;IAAAa,QAAA,EACCT,OAAO,iBACNJ,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAKT,OAAO,CAACD;MAAI;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACtBb,OAAO,CAACc,OAAO,iBACdlB,OAAA;QAAKmB,GAAG,EAAEf,OAAO,CAACc,OAAO,CAACE,aAAc;QAACC,GAAG,EAAEjB,OAAO,CAACD;MAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAC9D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEE;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAER,CAAC;AAACf,EAAA,CApCID,UAAU;EAAA,QACGH,SAAS;AAAA;AAAAwB,EAAA,GADtBrB,UAAU;AAsChB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}